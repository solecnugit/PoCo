/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { JobCenter, JobCenterInterface } from "../JobCenter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "messenger",
        type: "address",
      },
    ],
    name: "NewJob",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
    ],
    name: "SubmitJob",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "messager",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
    ],
    name: "postJob",
    outputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "submitJob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activeJobCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "jobCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getJobs",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506115bf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638129fc1c116100665780638129fc1c1461010e5780638da5cb5b14610118578063ca32b5c714610136578063f2fde38b14610154578063f9974a5d1461017057610093565b80634c34e44a146100985780634c5d8a0f146100c857806368581ebd146100e6578063715018a614610104575b600080fd5b6100b260048036038101906100ad9190610cfa565b61018c565b6040516100bf9190610d53565b60405180910390f35b6100d0610355565b6040516100dd9190610d53565b60405180910390f35b6100ee61036b565b6040516100fb9190610e2c565b60405180910390f35b61010c61037c565b005b610116610390565b005b6101206104ce565b60405161012d9190610e5d565b60405180910390f35b61013e6104f8565b60405161014b9190610d53565b60405180910390f35b61016e60048036038101906101699190610e78565b610509565b005b61018a60048036038101906101859190611017565b61058c565b005b6000606860008154809291906101a1906110a2565b91905055905060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001838152506065600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015590505061031481606661078990919063ffffffff16565b50807ff00fed00839cb30afae0d16ddebe5af36a8a53b819a5a397148991b189cb604c33856040516103479291906110ea565b60405180910390a292915050565b600060016068546103669190611113565b905090565b606061037760666107a3565b905090565b6103846107c4565b61038e6000610842565b565b60008060019054906101000a900460ff161590508080156103c15750600160008054906101000a900460ff1660ff16105b806103ee57506103d030610908565b1580156103ed5750600160008054906101000a900460ff1660ff16145b5b61042d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610424906111ca565b60405180910390fd5b60016000806101000a81548160ff021916908360ff160217905550801561046a576001600060016101000a81548160ff0219169083151502179055505b61047261092b565b80156104cb5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516104c2919061123c565b60405180910390a15b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610504606661098c565b905090565b6105116107c4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610580576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610577906112c9565b60405180910390fd5b61058981610842565b50565b6105a08260666109a190919063ffffffff16565b6105df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d690611335565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166065600084815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067b906113a1565b60405180910390fd5b80805190602001206065600084815260200190815260200160002060030154146106e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106da9061140d565b60405180910390fd5b6106f78260666109bb90919063ffffffff16565b50336065600084815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550817f42360d290b8903fd5bdb2c98bf3c3e7880bc121f35571bf33f10989cf146f6073360405161077d9190610e5d565b60405180910390a25050565b600061079b836000018360001b6109d5565b905092915050565b606060006107b383600001610a45565b905060608190508092505050919050565b6107cc610aa1565b73ffffffffffffffffffffffffffffffffffffffff166107ea6104ce565b73ffffffffffffffffffffffffffffffffffffffff1614610840576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083790611479565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff1661097a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109719061150b565b60405180910390fd5b610982610aa9565b6001606881905550565b600061099a82600001610b0a565b9050919050565b60006109b3836000018360001b610b1b565b905092915050565b60006109cd836000018360001b610b3e565b905092915050565b60006109e18383610b1b565b610a3a578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610a3f565b600090505b92915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015610a9557602002820191906000526020600020905b815481526020019060010190808311610a81575b50505050509050919050565b600033905090565b600060019054906101000a900460ff16610af8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aef9061150b565b60405180910390fd5b610b08610b03610aa1565b610842565b565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b60008083600101600084815260200190815260200160002054905060008114610c46576000600182610b709190611113565b9050600060018660000180549050610b889190611113565b9050818114610bf7576000866000018281548110610ba957610ba861152b565b5b9060005260206000200154905080876000018481548110610bcd57610bcc61152b565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480610c0b57610c0a61155a565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610c4c565b60009150505b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c9182610c66565b9050919050565b610ca181610c86565b8114610cac57600080fd5b50565b600081359050610cbe81610c98565b92915050565b6000819050919050565b610cd781610cc4565b8114610ce257600080fd5b50565b600081359050610cf481610cce565b92915050565b60008060408385031215610d1157610d10610c5c565b5b6000610d1f85828601610caf565b9250506020610d3085828601610ce5565b9150509250929050565b6000819050919050565b610d4d81610d3a565b82525050565b6000602082019050610d686000830184610d44565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610da381610d3a565b82525050565b6000610db58383610d9a565b60208301905092915050565b6000602082019050919050565b6000610dd982610d6e565b610de38185610d79565b9350610dee83610d8a565b8060005b83811015610e1f578151610e068882610da9565b9750610e1183610dc1565b925050600181019050610df2565b5085935050505092915050565b60006020820190508181036000830152610e468184610dce565b905092915050565b610e5781610c86565b82525050565b6000602082019050610e726000830184610e4e565b92915050565b600060208284031215610e8e57610e8d610c5c565b5b6000610e9c84828501610caf565b91505092915050565b610eae81610d3a565b8114610eb957600080fd5b50565b600081359050610ecb81610ea5565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f2482610edb565b810181811067ffffffffffffffff82111715610f4357610f42610eec565b5b80604052505050565b6000610f56610c52565b9050610f628282610f1b565b919050565b600067ffffffffffffffff821115610f8257610f81610eec565b5b610f8b82610edb565b9050602081019050919050565b82818337600083830152505050565b6000610fba610fb584610f67565b610f4c565b905082815260208101848484011115610fd657610fd5610ed6565b5b610fe1848285610f98565b509392505050565b600082601f830112610ffe57610ffd610ed1565b5b813561100e848260208601610fa7565b91505092915050565b6000806040838503121561102e5761102d610c5c565b5b600061103c85828601610ebc565b925050602083013567ffffffffffffffff81111561105d5761105c610c61565b5b61106985828601610fe9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110ad82610d3a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036110df576110de611073565b5b600182019050919050565b60006040820190506110ff6000830185610e4e565b61110c6020830184610e4e565b9392505050565b600061111e82610d3a565b915061112983610d3a565b925082820390508181111561114157611140611073565b5b92915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b60006111b4602e83611147565b91506111bf82611158565b604082019050919050565b600060208201905081810360008301526111e3816111a7565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061122661122161121c846111ea565b611201565b6111f4565b9050919050565b6112368161120b565b82525050565b6000602082019050611251600083018461122d565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006112b3602683611147565b91506112be82611257565b604082019050919050565b600060208201905081810360008301526112e2816112a6565b9050919050565b7f6a6f62206d757374206265206163746976650000000000000000000000000000600082015250565b600061131f601283611147565b915061132a826112e9565b602082019050919050565b6000602082019050818103600083015261134e81611312565b9050919050565b7f6a6f62206d757374206265206176616c6961626c650000000000000000000000600082015250565b600061138b601583611147565b915061139682611355565b602082019050919050565b600060208201905081810360008301526113ba8161137e565b9050919050565b7f6b6579206d757374206d61746368207468652073657263726574000000000000600082015250565b60006113f7601a83611147565b9150611402826113c1565b602082019050919050565b60006020820190508181036000830152611426816113ea565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611463602083611147565b915061146e8261142d565b602082019050919050565b6000602082019050818103600083015261149281611456565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006114f5602b83611147565b915061150082611499565b604082019050919050565b60006020820190508181036000830152611524816114e8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122019f4611cd323d753906ef994136d8f63b2a75cb84e24b6df369b5570306d7f9264736f6c63430008110033";

type JobCenterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JobCenterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JobCenter__factory extends ContractFactory {
  constructor(...args: JobCenterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JobCenter> {
    return super.deploy(overrides || {}) as Promise<JobCenter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): JobCenter {
    return super.attach(address) as JobCenter;
  }
  override connect(signer: Signer): JobCenter__factory {
    return super.connect(signer) as JobCenter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JobCenterInterface {
    return new utils.Interface(_abi) as JobCenterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JobCenter {
    return new Contract(address, _abi, signerOrProvider) as JobCenter;
  }
}
